# USE TABLES countries, economies, life_expectancy, religions, covid19_basic_differences, covid19_testing, weather, lookup_table
# VIEWS IN PROJECT:

#1. v_covid_variables 
#2 v_economies_population
#3. v_life_expectancy 
#4. v_religion
#5. v_weather_calculation

# Main project view t_vojtech_cigler_projekt_SQL_final contains all variables from previoues views

# Auxiliary tables and views:

#    v_total_population - calculation of total population for every country 2020
#    v_weather_converting - for converting weather variables

# view v_economies_population. Creating variables code_of_season,population_density,median_age_2018
# Using day_of_the_week and MONTH function. Èasové promìnné binární promìnná pro víkend / pracovní den roèní období daného dne (zakódovat jako 0 až 3)


# OPTIONS FOR replace Czechia by Czech republic
#Copy source table covid19_basic_differences to auxiliar table (replace Czechia by Czech republic)
#CREATE TABLE aux_covid19_basic_differences LIKE covid19_basic_differences;
#INSERT INTO aux_covid19_basic_differences SELECT * FROM covid19_basic_differences;
#Another option for value Czech republic- update covid19_detail_global_differences set country='Czech republic' where country in ('Czechia');

#create or replace table aux_covid19_basic_differences as
#select replace(country,'Czechia','Czech republic') as 'country',confirmed,deaths,recovered; 

#Modify column country from MEDIUM TEXT to TEXT - 
#alter table aux_covid19_basic_differences 
#MODIFY country TEXT;

#VIEW v_covid_variables
#Covid variables - confirmed,test_performed,test_positivity_rate,tests_per_capita


create or replace view v_covid_variables as
select cbd.`date`,
       cbd.country,
       cbd.confirmed,
       ct.tests_performed,
       ROUND((cbd.confirmed/ct.tests_performed)*100,2) as 'test_positivity_rate',
       ROUND((ct.tests_performed/c.population)*100,2) as 'tests_per_capita',       
CASE
WHEN DAYOFWEEK(cbd.`date`) IN ('1','7') THEN 0 ELSE 1
END AS Day_of_the_week,
CASE
WHEN MONTH(cbd.`date`) IN ('3','4','5')   THEN 0
WHEN MONTH(cbd.`date`) IN ('6','7','8')   THEN 1
WHEN MONTH(cbd.`date`) IN ('9','10','11') THEN 2
WHEN MONTH(cbd.`date`) IN ('12','1','2')  THEN 3
END AS Season_code           
from covid19_basic_differences cbd
join covid19_tests ct 
on ct.country=cbd.country AND
   ct.`date` =cbd.`date`
join countries c 
on cbd.country=c.country
where
ct.tests_performed  is not null AND
cbd.confirmed is not null
group by cbd.`date`,cbd.country 
order by cbd.`date` desc,cbd.country asc;


#View v_economies_and_population

create or replace view v_economies_and_population as
select cnt.*,v1.GDPR_per_capita,v2.gini_coeff,v3.mortality_under5
from
(select c.country,c.capital_city,c.population,c.population_density,median_age_2018 from countries c) cnt
left join
(   SELECT e.country, max(`year`),
           round(e.GDP/e.population, 2) as 'GDPR_per_capita'
    FROM  economies e 
    where e.GDP is not null and population>0
    group by country) v1
    on cnt.country=v1.country
left join 
 (  SELECT e.country,max(`year`),
           e.gini as 'gini_coeff'
     FROM  economies e
     where e.gini is not null
     group by country)v2
     on     cnt.country=v2.country
left join
(   SELECT e.country,max(`year`),
	e.mortaliy_under5 as 'mortality_under5'
    FROM economies e
    where e.mortaliy_under5 is not null
    group by country)v3
    on
    cnt.country=v3.country;

# Vypoèet podílu jednotlivých náboženství - použijeme jako proxy promìnnou pro kulturní specifika.
# Pro každé náboženství v daném státì bych chtìl procentní podíl jeho pøíslušníkù na celkovém obyvatelstvu.
#Pomocí Select Distinct zjistím kolik celkem náboženství se vyskytuje ve sloupci religion a pro každé náboženství vytvoøím sloupec, který bude výsledkem porovnání s celkovou populací dané zemì.
#Pro každou zemi zjištuji, zda je poèet obyvatel hlásící se k danému náboženství vyplnìn, pokud ne, tak dosadím hodnotu 0. Tou se ale nesmí dìlit.


# VIEW v_total_population
create or replace view v_total_population as
SELECT r.country , r.year,sum(r.population) as total_population_2020
        FROM religions r 
        WHERE r.year = 2020
        GROUP BY r.country;

create or replace view v_religion as 
select r1.country, r1.population, 
round(r1.Christianity/tp.total_population_2020*100, 2) as 'Christianity', round(r1.Islam/tp.total_population_2020*100, 2) as 'Islam', round(r1.Unaffiliated_religions/tp.total_population_2020*100, 2) as 'Unaffiliated_religions',
round(r1.Hinduism/tp.total_population_2020*100, 2) as 'Hinduism', round(r1.Buddhism/tp.total_population_2020*100, 2) as 'Buddhism', round(r1.Folk_religions/tp.total_population_2020*100, 2) as 'Folk_religions',
round(r1.Other_religions/tp.total_population_2020*100, 2) as 'Other_religions', round(r1.Judaism/tp.total_population_2020*100, 2) as 'Judaism'
from 
(select country, sum(population) as 'population', 
sum(case when religion = 'Christianity' then population else 0 end) as 'Christianity',
sum(case when religion = 'Islam' then population else 0 end) as 'Islam',
sum(case when religion = 'Unaffiliated Religions' then population else 0 end) as 'Unaffiliated_religions', 
sum(case when religion = 'Hinduism' then population else 0 end) as 'Hinduism', 
sum(case when religion = 'Buddhism' then population else 0 end) as 'Buddhism', 
sum(case when religion = 'Folk Religions' then population else 0 end) as 'Folk_religions',
sum(case when religion = 'Other Religions' then population else 0 end) as 'Other_religions',
sum(case when religion = 'Judaism' then population else 0 end) as 'Judaism'
from religions r where year = 2020 and population > 0 group by country) r1
join v_total_population tp
on r1.country=tp.country
group by r1.country;



#Calculation of life_expectancy. VARIABLE life_exp_ratio - rozdíl mezi oèekávanou dobou dožití v roce 1965 a v roce 2015

create or replace view v_life_expectancy as
  SELECT a.country, a.life_exp_1965 , b.life_exp_2015,
  round( b.life_exp_2015 / a.life_exp_1965, 2 ) as life_exp_ratio
  FROM (
    SELECT le.country , le.life_expectancy as life_exp_1965
    FROM life_expectancy le 
    WHERE year = 1965
    ) a JOIN (
    SELECT le.country , le.life_expectancy as life_exp_2015
    FROM life_expectancy le 
    WHERE year = 2015
    ) b
   ON a.country = b.country;
    
create or replace view v_weather_converting as
 select DATE(w.`date`) as 'date',w.`time`,w.city,c.country,convert(replace(w.temp,' °c',''),int) as 'daily_avg_temp',convert(replace(w.rain,' mm',''),decimal) as 'rainy_hours',convert(replace(w.gust,' km/h',''),int) as 'max_wind_gust'
 from countries c
 join weather w
 on c.capital_city=w.city
 where 
 w.city is not null
 order by w.`date` desc,w.city asc;


create or replace view v_weather_calculation as
select v1.*,
CASE 
       when v2.rainy_hours is null then 0 else v2.rainy_hours
       end as rainy_hours,
              v3.max_wind_gust
from
  ( select `date`,city,country,avg(daily_avg_temp) as 'daily_avg_temp'  from v_weather_converting vwc2 
    where `time` in ('06:00','09:00','12:00','15:00','18:00') 
    group by `date`,city,country
    order by `date` desc,city asc) v1
left join
   ( select distinct `date`,city,country,Count(rainy_hours) as 'rainy_hours'   from v_weather_converting vwc2
     where rainy_hours>0
     group by `date`,city,country) v2
     #having COUNT(rainy_hours)>0 order by `date` desc,city asc
     on
     v1.country=v2.country AND 
      v1.`date`=v2.`date`
left join
   (select `date`,city,country,MAX(max_wind_gust) as 'max_wind_gust'  from v_weather_converting vwc2
     group by `date`,city,country
     order by `date` desc,city asc) v3
on
      v1.country=v3.country AND 
      v1.`date`=v3.`date`;
      
      
 #FINAL VIEW from all previous views - v_vojtech_cigler_projekt_SQL

create or replace table t_vojtech_cigler_projekt_SQL_final AS
SELECT v1.*,v2.capital_city,v2.population,v2.population_density,v2.median_age_2018,v2.GDPR_per_capita,v2.gini_coeff,v2.mortality_under5,v3.life_exp_ratio,v4.Christianity,v4.Islam,v4.Unaffiliated_religions,v5.daily_avg_temp,v5.rainy_hours,v5.max_wind_gust
FROM
 ( select * from v_covid_variables)v1
join 
( select * from v_economies_and_population) v2
   on  v1.country=v2.country
left join
 ( select * from v_life_expectancy) v3
   on  v1.country=v3.country
left join
 ( select * from v_religion) v4
   on  v1.country=v4.country 
 join
 ( select * from v_weather_calculation vwc) v5
   on v1.country=v5.country AND
      v1.`date`=v5.`date`
   group by v1.`date`,v1.country
   order by v1.`date` desc,v1.country asc; 
 
   
#Other selects:
  
  #select distinct country
  #from covid19_tests ct
  
  #select distinct country
  #from covid19_basic_differences cbd

#select distinct country
#from covid19_tests ct 

#select distinct country
#from countries c
  
  
#missing countries- zemì, které nejsou uvedeny buï žádné tabulce nebo jen v covid19_basic_differences

  #select distinct country
  #from covid19_basic_differences cbd 
  #EXCEPT
  #select distinct country
  #from covid19_tests ct;

  #select *
  #from covid19_tests ct
  #where country in ('Albania')
  
  
  
  
   
#   select *
# from covid19_basic_differences cbd 
# where country in ('Czechia')
  
  
 #select distinct religion 
#from religions r;
  
  #ve finální tabulce je zastoupeno pouze 16 zemí, protože potøebujeme data jak pro poèty nakažených, tak pro poèet testù. V opaèném pøípadì je pozorování zkreslené.
  #select distinct country
  #from t_vojtech_cigler_projekt_sql_final tvcpsf;
  
